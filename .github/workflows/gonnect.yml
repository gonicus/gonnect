name: GOnnect Build

on:
  workflow_dispatch:  # can be manually dispatched under GitHub's "Actions" tab
  # Run the build only, if the branch is release or a PR with release as target is used
  # Also run only, if files were changed, which result in a changed build.
  push:
    branches:
      - release
    paths:
      - 'CMakeList.txt'
      - 'resources/**'
      - 'media/**'
      - 'migrate/**'
      - 'i18n/*'
      - 'scripts/**'
      - 'specs/**'
      - 'src/**'
      - '.github/**'
  # Use the release branch workflow/actions definitions rather the pull_request definitions
  pull_request:
    branches:
      - release
    paths:
      - 'CMakeList.txt'
      - 'resources/**'
      - 'media/**'
      - 'migrate/**'
      - 'i18n/*'
      - 'scripts/**'
      - 'specs/**'
      - 'src/**'
      - '.github/**'

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  QT_VERSION: '6.8.2'
  EXT_BASE: ${{github.workspace}}

permissions:
  contents: read
  pull-requests: read

jobs:
  build:
    runs-on: ubuntu-24.04
    name: "Build GOnnect"

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          submodules: 'recursive'

      - name: Prepare
        uses: ./.github/actions/prepare
        with:
          qt-version: ${{ env.QT_VERSION }}

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBUILD_TESTING=ON -DBUILD_DEPENDENCIES=ON -DCMAKE_PREFIX_PATH="${{github.workspace}}/pjproject;${{github.workspace}}/qca/lib/cmake"

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --parallel $(nproc --all)

      - name: Upload Test artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: gonnect-tests
          path: build/tests/contactsTest
          retention-days: 1

  format:
    runs-on: ubuntu-24.04
    name: "Code Formatting"
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Run clang-format style check for C/C++/Protobuf programs.
        uses: jidicula/clang-format-action@4726374d1aa3c6aecf132e5197e498979588ebc8 # v4.15.0
        with:
          clang-format-version: '19'
          check-path: 'src'

  clang:
    runs-on: ubuntu-24.04
    name: "Static Code Analyzer"    

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          submodules: 'recursive'
          
      - name: Prepare
        uses: ./.github/actions/prepare
        with:
          qt-version: ${{ env.QT_VERSION }}

      - name: Run clang
        shell: bash
        run: |
          pip install scan-build
          export ANALYZE_ARGS="--exclude ${QT_ROOT_DIR} --exclude ${{github.workspace}}/external"
          scripts/static-clang-analyzer.sh
      
      - name: Save Report
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: clang-report
          path: /tmp/build.log
              

#  clazy:
#    runs-on: ubuntu-24.04
#    #needs: build
#    name: "Qt Semantics"
#
#    steps:
#      - uses: actions/checkout@v4
#        with:
#          submodules: 'recursive'
#
#      - name: Prepare
#        uses: ./.github/actions/prepare
#        with:
#          qt-version: ${{ env.QT_VERSION }}   
#          for-clazy: 'true'             
#
#      - name: Run clazy
#        shell: bash
#        run: |
#          find ~/.local/clazy/lib
#          LD_LIBRARY_PATH=~/.local/clazy/lib scripts/static-clazy-analyzer.sh          


  tests:
    runs-on: ubuntu-24.04
    name: "Unit Tests"
    needs: build

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Prepare
        uses: ./.github/actions/prepare
        with:
          qt-version: ${{ env.QT_VERSION }}
          qt-only: 'true'

      - name: Download Test artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
        with:
          name: gonnect-tests

      - name: Run Unit Tests
        shell: bash
        run: |
          chmod +x contactsTest
          LD_LIBRARY_PATH=${QT_ROOT_DIR}/lib ./contactsTest
